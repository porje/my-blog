{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","components/ArticleList.js","pages/article-content.js","pages/ArticleListPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddComment.js","NotFoundPage.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","Fragment","AboutPage","ArticleList","articles","this","props","map","article","key","to","name","title","content","substring","Component","ArticleListPage","CommentsList","comments","comment","userName","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","console","log","fetch","method","result","json","body","id","onClick","AddComment","useState","setUserName","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","NotFoundPage","ArticlePage","match","params","find","otherArticles","filter","articleInfo","useEffect","fetchData","paragraph","NavBar","App","className","path","component","exact","React","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.72d03fbf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst HomePage = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <h1>My Blog </h1>\r\n            <p>As a highly motivated computer professional with the enthusiasm to accept new challenges, \r\n                the opportunity to work as a software engineer at your company interests me considerably. \r\n                With a proven record of achievement in positions of similar scope and responsibility, \r\n                I am confident that I can make an immediate contribution to the success of your company.\r\n            </p>\r\n\r\n            <p>From July 2014 to till now I am working as a software engineer in Newgen Software Technologies \r\n                and I have worked on various technologies like Java,Jsp,Servlet,Spring,CSS,HTML,JavaScript,Jquery etc. \r\n            </p>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default HomePage","import React from 'react';\r\n\r\nconst AboutPage = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <h1>About Me </h1>\r\n            <p>As a highly motivated computer professional with the enthusiasm to accept new challenges, \r\n                the opportunity to work as a software engineer at your company interests me considerably. \r\n                With a proven record of achievement in positions of similar scope and responsibility, \r\n                I am confident that I can make an immediate contribution to the success of your company.\r\n            </p>\r\n\r\n            <p>From July 2014 to till now I am working as a software engineer in Newgen Software Technologies \r\n                and I have worked on various technologies like Java,Jsp,Servlet,Spring,CSS,HTML,JavaScript,Jquery etc. \r\n            </p>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default AboutPage","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass ArticleList extends Component {\r\n    render(){\r\n        const articles = this.props.articles;\r\n        return(\r\n            <React.Fragment>\r\n                {articles.map((article, key) =>(\r\n                    <Link key = {key} to = {`/article/${article.name}`}>\r\n                        <h3>{article.title}</h3>\r\n                        <p>{article.content[0].substring(0,150)}...</p>\r\n                    </Link>\r\n                ))}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ArticleList","const articles = [\r\n    {\r\n        name: 'learn-react',\r\n        title: 'The best way to learn react',\r\n        content: ['Reacttttttt']\r\n    },\r\n    {\r\n        name: 'learn-angular',\r\n        title: 'The best way to learn Angular',\r\n        content: ['Angularrrrrr']\r\n    },\r\n    {\r\n        name: 'learn-java',\r\n        title: 'The best way to learn java',\r\n        content: ['Javaaaaaaa']\r\n    },\r\n];\r\n\r\n\r\nexport default articles;","import React from 'react';\r\nimport ArticleList from '../components/ArticleList'\r\nimport articles from './article-content';\r\n\r\nconst ArticleListPage = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <h1>Article List </h1>\r\n            <ArticleList articles = {articles} />\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default ArticleListPage","import React from 'react';\r\n\r\nconst CommentsList = ({comments}) => {\r\n    return(\r\n        <>\r\n            <h3>Comments:</h3>\r\n            {comments.map((comment, key) => {\r\n                return <div key={key}>\r\n                    <h4>{comment.userName}</h4>\r\n                    <p>{comment.text}</p>\r\n                </div>\r\n            })}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommentsList","import React from 'react';\r\n\r\nconst UpvotesSection = ({articleName, upvotes, setArticleInfo}) => {\r\n    const upvoteArticle = async () => {\r\n        console.log('inside upvoteArticle')\r\n        const result = await fetch(`/api/article/${articleName}/upvote`,\r\n                    {method: 'post',});\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n    return(\r\n        <div id=\"upvotes-section\">\r\n            <button onClick={() => upvoteArticle()}>Add UpVotes</button>\r\n            <p>This post has been upvoted {upvotes} times</p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default UpvotesSection","import React, {useState} from 'react';\r\n\r\nconst AddComment = ({articleName, setArticleInfo}) => {\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const addComment = async () => {\r\n        console.log(userName);\r\n        console.log(commentText)\r\n        const result = await fetch(`/api/artilce/${articleName}/add-comment`, {\r\n            method: 'post',\r\n            body: JSON.stringify({userName, text: commentText}),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n\r\n        const body = await result.json();\r\n        console.log(body)\r\n        setArticleInfo(body);\r\n        setUserName('');\r\n        setCommentText('');\r\n    }\r\n\r\n    return(\r\n        <div id=\"add-comment\">\r\n            <h3> Add comment </h3>\r\n            <label>Name: <input type=\"text\" value = {userName} onChange={(event) => setUserName(event.target.value)} /></label>\r\n            <label>Comment: <textarea rows=\"4\" cols=\"50\" value = {commentText} onChange={(event) => setCommentText(event.target.value)} /></label>\r\n            <button onClick={() => addComment()}> Add Comment </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddComment;","import React from 'react';\r\n\r\nconst NotFoundPage = () =>{\r\n    return(\r\n        <h1>404: Page Not Found </h1>\r\n    )\r\n};\r\n\r\nexport default NotFoundPage;","import React, {useState, useEffect} from 'react';\r\nimport articles from './article-content';\r\nimport ArticleList from '../components/ArticleList';\r\nimport CommentsList from '../components/CommentsList';\r\nimport UpvotesSection from '../components/UpvotesSection';\r\nimport AddComment from '../components/AddComment';\r\nimport NotFoundPage from '../NotFoundPage';\r\n\r\nconst ArticlePage = ({match}) => {\r\n    const name = match.params.name;\r\n    const article = articles.find(article => article.name === name);\r\n    const otherArticles = articles.filter(article => article.name !== name);\r\n\r\n    const [articleInfo, setArticleInfo] = useState({upvotes: 0, comments: []});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            const result = await fetch(`/api/articles/${name}`);\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n    }, [name]);\r\n\r\n    if( !article ) {\r\n        return <NotFoundPage />\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <h1> {article.title} </h1>\r\n            <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\r\n            {article.content.map((paragraph, key) => (\r\n                <p key = {key}> {paragraph} </p>\r\n            ))\r\n            }\r\n            <CommentsList comments={articleInfo.comments} />\r\n            <AddComment articleName={name} setArticleInfo={setArticleInfo} />\r\n            <h2>Other Articles:</h2>\r\n            <ArticleList articles = {otherArticles} />\r\n        </React.Fragment>\r\n        \r\n    );\r\n};\r\n\r\nexport default ArticlePage","import React  from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return(\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to = \"/\" >Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to = \"/about\" >About</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to = \"/articles\" >Articles</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n    \r\n};\r\n\r\nexport default NavBar","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport './App.css';\n\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticleList from './pages/ArticleListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NavBar from './NavBar';\nimport NotFoundPage from './NotFoundPage';\n\nclass App extends React.Component {\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <div id=\"page-body\">\n            <Switch>\n            <Route path=\"/\" \n                    component={HomePage}\n                    exact />\n            <Route path=\"/articles\" \n                    component={ArticleList}\n                   />\n            <Route path=\"/article/:name\" \n                    component={ArticlePage}\n                    />\n            <Route path=\"/about\" \n                    component={AboutPage}\n                   />\n            <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    \n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}